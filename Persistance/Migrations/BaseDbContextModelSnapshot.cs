// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance.Contexts;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Current", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("AddressBABNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressBABNo");

                    b.Property<string>("AddressCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressCity");

                    b.Property<string>("AddressDistrict")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressDistrict");

                    b.Property<string>("AddressHeader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressHeader");

                    b.Property<string>("AddressMainStreet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressMainStreet");

                    b.Property<string>("AddressNeighbourhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressNeighbourhood");

                    b.Property<string>("AddressNote")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressNote");

                    b.Property<string>("AddressPostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressPostCode");

                    b.Property<string>("AddressStreet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AddressStreet");

                    b.Property<bool>("CardType")
                        .HasColumnType("bit")
                        .HasColumnName("CardType");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CurrentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CurrentCode");

                    b.Property<string>("CurrentFirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CurrentFirstName");

                    b.Property<string>("CurrentLastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CurrentLastName");

                    b.Property<string>("CurrentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CurrentName");

                    b.Property<int>("CurrentType")
                        .HasColumnType("int")
                        .HasColumnName("CurrentType");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FaxNumber");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PhoneNumber");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.Property<int>("TaxDepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("TaxDepartmentId");

                    b.Property<string>("TaxNumberOrIdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TaxNumberOrIdentityNumber");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("TaxDepartmentId");

                    b.HasIndex(new[] { "CurrentName" }, "UK_Currents_CurrentName");

                    b.ToTable("Currents", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.TaxDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TaxDepartments");
                });

            modelBuilder.Entity("Domain.Entities.Current", b =>
                {
                    b.HasOne("Domain.Entities.TaxDepartment", "TaxDepartment")
                        .WithMany()
                        .HasForeignKey("TaxDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxDepartment");
                });
#pragma warning restore 612, 618
        }
    }
}
